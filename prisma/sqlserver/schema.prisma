// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Users {
  id           String        @id @default(uuid())
  avatar       String?
  account      String?
  username     String?
  password     String
  email        String?
  phone        String?
  role         String        @default("-")
  enabled      Boolean       @default(true)
  provider     String?
  sub          String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sessions     Sessions[]
  userBalances UserBalances?
  UserModels   UserModels[]
  AuditLogs    RequestLogs[]
  Orders       Orders[]
  Chats        Chats[]
}

model FileServices {
  id        String   @id @default(uuid())
  name      String
  enabled   Boolean  @default(true)
  type      String
  configs   String   @default("{}") @db.NVarChar(2048)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatModels {
  id            String     @id @default(uuid())
  modelProvider String
  modelVersion  String
  name          String
  isDefault     Boolean    @default(false)
  rank          Int?
  remarks       String?
  modelKeysId   String?
  fileServerId  String?
  fileConfig    String?    @default("{}") @db.NVarChar(2048)
  modelConfig   String     @default("{}") @db.NVarChar(2048)
  priceConfig   String     @default("{}") @db.NVarChar(2048)
  enabled       Boolean    @default(true)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  ModelKeys     ModelKeys? @relation(fields: [modelKeysId], references: [id])
  Chats         Chats[]
}

model Sessions {
  id        String   @id @default(uuid())
  user      Users    @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserModels {
  id        String   @id @default(uuid())
  userId    String
  models    String   @default("[]")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      Users    @relation(fields: [userId], references: [id])
}

model Chats {
  id                              String         @id @default(uuid())
  title                           String         @db.NVarChar(50)
  userId                          String
  chatModelId                     String?
  userModelConfig                 String         @default("{}")
  displayingLeafChatMessageNodeId String?
  isShared                        Boolean        @default(false)
  isDeleted                       Boolean        @default(false)
  createdAt                       DateTime       @default(now())
  user                            Users          @relation(fields: [userId], references: [id])
  chatModel                       ChatModels?    @relation(fields: [chatModelId], references: [id])
  ChatMessages                    ChatMessages[]
}

model ChatMessages {
  id              String   @id @default(uuid())
  userId          String
  chatId          String
  parentId        String?
  messages        String
  calculatedPrice Decimal
  tokenUsed       Int
  isDeleted       Boolean  @default(false)
  createdAt       DateTime @default(now())
  chats           Chats    @relation(fields: [chatId], references: [id])
}

model UserBalances {
  id        String   @id @default(uuid())
  balance   Decimal  @default(0)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      Users    @relation(fields: [userId], references: [id])
}

model BalanceLogs {
  id           String   @id @default(uuid())
  userId       String
  createUserId String
  value        Decimal  @default(0)
  type         Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Orders {
  id           String   @id @default(uuid())
  createUserId String
  amount       Int
  outTradeNo   String
  status       String
  payH5Url     String?
  prepayId     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         Users    @relation(fields: [createUserId], references: [id])
}

model Counterfoils {
  id        String   @id @default(uuid())
  orderId   String
  info      String   @db.Text()
  createdAt DateTime @default(now())
}

model LoginServices {
  id        String   @id @default(uuid())
  type      String
  enabled   Boolean  @default(true)
  configs   String   @default("{}") @db.NVarChar(2048)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSms {
  id        String   @id @default(uuid())
  type      String
  status    String
  code      String
  createdAt DateTime @default(now())
}

model PayServices {
  id        String   @id @default(uuid())
  type      String
  enabled   Boolean  @default(true)
  configs   String   @db.Text()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RequestLogs {
  id           String   @id @default(uuid())
  ip           String?
  userId       String?
  url          String
  method       String
  statusCode   Int
  responseTime String
  requestTime  String
  headers      String?  @db.Text()
  request      String?  @db.Text()
  response     String?  @db.Text()
  createdAt    DateTime @default(now())
  user         Users?   @relation(fields: [userId], references: [id])
}

model ModelKeys {
  id         String       @id @default(uuid())
  name       String       @db.NVarChar(100)
  type       String       @db.NVarChar(50)
  configs    String       @db.NVarChar(2048)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  ChatModels ChatModels[]
}
